# -*- coding: utf-8 -*-
"""book_recommendation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QWRiNl3O2JQyDUchA1kLoOI8_MAiT1f0
"""

import numpy as np
import pandas as pd

books=pd.read_csv('/content/drive/MyDrive/Sem2/Big data/miniproject/Books.csv')
ratings=pd.read_csv('/content/drive/MyDrive/Sem2/Big data/miniproject/Ratings.csv')

books.info()

ratings.info()

merged_df=ratings.merge(books, on='ISBN')
merged_df.head()

ratings_num=merged_df.groupby('Book-Title').count()['Book-Rating'].reset_index()
ratings_num.rename(columns={'Book-Rating':'num_rating'},inplace=True)
ratings_num

ratings_avg=merged_df.groupby('Book-Title').mean()['Book-Rating'].reset_index()
ratings_avg

books_df=ratings_num.merge(ratings_avg, on='Book-Title')
books_df

books_df=books_df[books_df['num_rating']>=250].sort_values('Book-Rating', ascending=True).head(50)

books_df=books_df.merge(books, on='Book-Title').drop_duplicates('Book-Title')[['Book-Title', 'Book-Author', 'Book-Rating', 'num_rating']]

books_df

x=merged_df.groupby('User-ID').count()['Book-Rating']>200

user_rated=x[x].index

rated_filter=merged_df[merged_df['User-ID'].isin(user_rated)]

y=rated_filter.groupby('Book-Title').count()['Book-Rating']>=50
rated_books=y[y].index
rated_books

final_ratings= rated_filter[rated_filter['Book-Title'].isin(rated_books)]

final_ratings

books_table=final_ratings.pivot_table(index='Book-Title',columns='User-ID',values='Book-Rating')

books_table.fillna(0,inplace=True)
books_table

from sklearn.metrics.pairwise import cosine_similarity

similarities=cosine_similarity(books_table)
similarities.shape

similarities

def recommendation(book):
    index=np.where(books_table.index==book)[0][0]
    book_indices=sorted(list(enumerate(similarities[index])),key=lambda x:x[1],reverse=True)[1:6]
    data=[]
    for book_index in book_indices:
        item=[]
        print(books_table.index[book_index[0]])
        temp_table=books[books['Book-Title']==books_table.index[book_index[0]]]
        item.extend(list(temp_table.drop_duplicates('Book-Title')['Book-Title'].values))
        item.extend(list(temp_table.drop_duplicates('Book-Title')['Book-Author'].values))
        item.extend(list(temp_table.drop_duplicates('Book-Title')['Image-URL-M'].values))
        data.append(item)
    return data

recommendation('You Belong To Me')

recommendation('Year of Wonders')